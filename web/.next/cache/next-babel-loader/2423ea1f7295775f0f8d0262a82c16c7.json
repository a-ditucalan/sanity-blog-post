{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mcveanguest\\\\Desktop\\\\my-blog\\\\web\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport groq from 'groq';\nimport client from '../client';\n\nconst Index = props => {\n  const {\n    posts = []\n  } = props;\n  console.log(posts);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Welcome to a blog!\"), posts.map(({\n    _id,\n    title = '',\n    slug = '',\n    _updatedAt = ''\n  }) => slug && __jsx(\"li\", {\n    key: _id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/post/[slug]\",\n    as: `/post/${slug.current}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, title)), ' ', \"(\", new Date(_updatedAt).toDateString(), \")\")));\n};\n\nIndex.getInitialProps = async () => ({\n  posts: await client.fetch(groq`\n      *[_type == \"post\" && publishedAt < now()]|order(publishedAt desc)\n    `)\n});\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/mcveanguest/Desktop/my-blog/web/pages/index.js"],"names":["Link","groq","client","Index","props","posts","console","log","map","_id","title","slug","_updatedAt","current","Date","toDateString","getInitialProps","fetch"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,QAAM;AAAEC,IAAAA,KAAK,GAAG;AAAV,MAAiBD,KAAvB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEGA,KAAK,CAACG,GAAN,CACC,CAAC;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,KAAK,GAAG,EAAf;AAAmBC,IAAAA,IAAI,GAAG,EAA1B;AAA8BC,IAAAA,UAAU,GAAG;AAA3C,GAAD,KACED,IAAI,IACF;AAAI,IAAA,GAAG,EAAEF,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,cAAX;AAA0B,IAAA,EAAE,EAAG,SAAQE,IAAI,CAACE,OAAQ,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,KAAJ,CADF,CADF,EAGU,GAHV,OAII,IAAII,IAAJ,CAASF,UAAT,EAAqBG,YAArB,EAJJ,MAHL,CAFH,CADF;AAgBD,CAnBD;;AAqBAZ,KAAK,CAACa,eAAN,GAAwB,aAAa;AACnCX,EAAAA,KAAK,EAAE,MAAMH,MAAM,CAACe,KAAP,CAAahB,IAAK;;KAAlB;AADsB,CAAb,CAAxB;;AAMA,eAAeE,KAAf","sourcesContent":["import Link from 'next/link'\r\nimport groq from 'groq'\r\nimport client from '../client'\r\n\r\nconst Index = (props) => {\r\n  const { posts = [] } = props\r\n  console.log(posts)\r\n  return (\r\n    <div>\r\n      <h1>Welcome to a blog!</h1>\r\n      {posts.map(\r\n        ({ _id, title = '', slug = '', _updatedAt = '' }) =>\r\n          slug && (\r\n            <li key={_id}>\r\n              <Link href=\"/post/[slug]\" as={`/post/${slug.current}`}>\r\n                <a>{title}</a>\r\n              </Link>{' '}\r\n              ({new Date(_updatedAt).toDateString()})\r\n              </li>\r\n          )\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nIndex.getInitialProps = async () => ({\r\n  posts: await client.fetch(groq`\r\n      *[_type == \"post\" && publishedAt < now()]|order(publishedAt desc)\r\n    `)\r\n})\r\n\r\nexport default Index"]},"metadata":{},"sourceType":"module"}