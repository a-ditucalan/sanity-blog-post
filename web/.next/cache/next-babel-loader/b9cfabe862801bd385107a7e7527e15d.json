{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\mcveanguest\\\\Desktop\\\\my-blog\\\\web\\\\pages\\\\post\\\\[slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport client from '../../client';\n\nvar Post = function Post(props) {\n  var _props$title = props.title,\n      title = _props$title === void 0 ? 'Missing title' : _props$title,\n      _props$name = props.name,\n      name = _props$name === void 0 ? 'Missing name' : _props$name;\n  return __jsx(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, title), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"By \", name));\n};\n\nPost.getInitialProps = function _callee(context) {\n  var _context$query$slug, slug;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          // It's important to default the slug so that it doesn't return \"undefined\"\n          _context$query$slug = context.query.slug, slug = _context$query$slug === void 0 ? \"\" : _context$query$slug;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(client.fetch(\"\\n    *[_type == \\\"post\\\" && slug.current == $slug][0]{title, \\\"name\\\": author->name}\\n  \", {\n            slug: slug\n          }));\n\n        case 3:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Post;","map":{"version":3,"sources":["C:/Users/mcveanguest/Desktop/my-blog/web/pages/post/[slug].js"],"names":["client","Post","props","title","name","getInitialProps","context","query","slug","fetch"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,cAAnB;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AAAA,qBACqCA,KADrC,CACdC,KADc;AAAA,MACdA,KADc,6BACN,eADM;AAAA,oBACqCD,KADrC,CACWE,IADX;AAAA,MACWA,IADX,4BACkB,cADlB;AAEtB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,KAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAUC,IAAV,CAFF,CADF;AAMD,CARD;;AAUAH,IAAI,CAACI,eAAL,GAAuB,iBAAgBC,OAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACrB;AADqB,gCAECA,OAAO,CAACC,KAFT,CAEbC,IAFa,EAEbA,IAFa,oCAEN,EAFM;AAAA;AAAA,2CAGRR,MAAM,CAACS,KAAP,8FAEV;AAAED,YAAAA,IAAI,EAAJA;AAAF,WAFU,CAHQ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAQA,eAAeP,IAAf","sourcesContent":["import client from '../../client'\r\nconst Post = (props) => {\r\n  const { title = 'Missing title', name = 'Missing name' } = props\r\n  return (\r\n    <article>\r\n      <h1>{title}</h1>\r\n      <span>By {name}</span>\r\n    </article>\r\n  )\r\n}\r\n\r\nPost.getInitialProps = async function (context) {\r\n  // It's important to default the slug so that it doesn't return \"undefined\"\r\n  const { slug = \"\" } = context.query\r\n  return await client.fetch(`\r\n    *[_type == \"post\" && slug.current == $slug][0]{title, \"name\": author->name}\r\n  `, { slug })\r\n}\r\n\r\nexport default Post"]},"metadata":{},"sourceType":"module"}